<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>DigiFAIL.com - libmackerel</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link href="/style.css" type="text/css" rel="stylesheet" />
<link rel="icon" type="image/png" href="/images/site/favicon.png" />
<link rel="shortcut icon" href="/images/site/favicon.png" /> 
<meta name="keywords" content="Linux,C,MAC,library" />
<meta name="description" content="libmackerel, functions for manipulating and creating MAC address strings." />
</head>
<body>
<!--#include virtual="/ui.html" -->
<div id="content">
<span class="right">
<img src="/images/software/libmackerel.png" alt="FISH!" />
</span>
<h1>libmackerel</h1>
<b>
&nbsp; &nbsp; &nbsp; &nbsp;Platform: GNU/Linux, Portable
<br>
&nbsp; &nbsp; &nbsp; &nbsp;Language: C
<br>
&nbsp; &nbsp; &nbsp; &nbsp;License: GPLv2
<br>
&nbsp; &nbsp; &nbsp; &nbsp;Dependencies: None
<br>
<!--
&nbsp; &nbsp; &nbsp; &nbsp;Google Plus Page: <a href="https://plus.google.com/112295798437810480494?prsrc=3">View</a>
<br>-->
&nbsp; &nbsp; &nbsp; &nbsp;Tagged Blog Posts: <a href="http://blog.digifail.com/tagged/libmackerel">View</a>
<br>
&nbsp; &nbsp; &nbsp; &nbsp;Latest Stable Release: 1.0
(<a href="ftp://ftp.digifail.com/downloads/software/libmackerel/libmackerel-1.0.tar.gz">Download</a>)
<br>
&nbsp; &nbsp; &nbsp; &nbsp;Development Progress:
(<a href="https://github.com/MS3FGX/libmackerel">github</a>)
</b>
<h1>About</h1>
<b>MAC - 48-bit address media access control address
<br>
kerel - (verb, Romani language) To do, make, or produce</b>
<p>
libmackerel is a library for doing string manipulations
of MAC-48 addresses. It can create, obfuscate, and encode MAC addresses,
and a bunch of other things I thought would be useful.
<h1>Usage</h1>
Looking in example.c should give you an idea of how libmackerel
can be used, it shows essentially all the basic functions.
<p>
I've provided the header file necessary to build libmackerel into an object and use it like
a "proper" library (see the example Makefile), but the lazy people (myself included) can
just #include the libmackerel.c file into their program.
<h1>Functions</h1>
Current libmackerel functions:
<p>
<b>mac_init ()</b><br>
This is required to get libmackerel setup properly, use it before anything else.
<p>
<b>mac_rand ()</b>
<br>
This function creates a completely random MAC address.
<p>
<b>mac_rand_half ()</b>
<br>
Same as regular "rand" function, but only returns half the characters. Good for random OUI or device ID.
<p>
<b>mac_verify (char* MAC)</b>
<br>
Give this function a MAC address, and it will return a 0 if it's valid, and a 1 if it isn't.
This function can be fooled maliciously, but should be good enough to weed out garbage.
<p>
<b>mac_obfuscate (char* MAC)</b>
<br>
This returns the MAC address with the device ID portion X'd out. (AA:BB:XX:XX)
<p>
<b>mac_encode (char* MAC)</b>
<br>
This performs a one-way CRC32 encoding on the MAC address. It will give you a completely unique
ID for that device, but the ID cannot be reversed to get the original MAC back. This function
is useful when you don't want to store the actual MAC addresses of devices, but want to be able
to ID them in the future.
<p>
<b>mac_get_oui (char* MAC)</b>
<br>
This function will return the OUI segment of a given MAC address.
<p>
<b>mac_get_hex (char* MAC)</b>
<br>
Passing a MAC address in standard colon notation (AA:BB:CC:DD) will return the MAC with dash notation (AA-BB-CC-DD).
<p>
<b>mac_get_vendor (char* MAC)</b>
<br>
This function will return the name of the manufacturer for a given MAC using the IEEE database.
To generate an up-to-date local copy of the database for libmackerel, use the included "gen_oui.sh" script.
<h1>Downloads</h1>
<p>
<!--#include virtual="/var/libmackerel.html" -->
</div>
<!--#include virtual="/analytics.html" -->
</body>
</html>
